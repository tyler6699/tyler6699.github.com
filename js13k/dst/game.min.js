function Camera(t,e){this.entity=new entityObj(30,30,"null",t,e,"view"),this.newPos=function(t,e){this.entity.x=parseInt(t.entity.x+t.entity.width/2-e.canvasHalfW),this.entity.y=t.entity.y+t.entity.height/2-e.canvasHalfH-offset}}function entityObj(t,e,i,s,n,h){this.type=h,this.width=t,this.height=e,this.angle=0,this.x=s,this.y=n,this.color=i,this.update=function(){ctx=mainGame.context,ctx.save(),ctx.translate(this.x,this.y),ctx.rotate(this.angle),ctx.fillStyle=this.color,ctx.fillRect(this.width/-2,this.height/-2,this.width,this.height),ctx.restore()}}function heroObj(e,s,n,h,a,o){this.entity=new entityObj(e,s,n,h,a,"hero"),this.speed=1,this.hPower=0,this.maxSpeed=3,this.slowRotate=5,this.maxRotate=10,this.color=n,this.startX=h,this.startY=a,this.currentLevel=1;var l=0,r=!1;this.update=function(t){ctx=mainGame.context,ctx.save(),ctx.translate(this.entity.x-t.entity.x,this.entity.y-t.entity.y),ctx.fillStyle=n,ctx.fillRect(this.entity.width/-2,this.entity.height/-2,this.entity.width,this.entity.height),ctx.restore()},this.newPos=function(e){this.hbX1=this.entity.x,this.hbY1=this.entity.y,this.hbX=this.entity.x+this.entity.width/2,this.hbY=this.entity.y+this.entity.height/2;var s=this.entity.x+this.hPower*this.speed,n=this.entity.y+6-l;0<l&&l--;var h=!0,a=!0;for(i=0;i<e.length;i++)t=e[i],t.isSolid&&(rectColiding(s,this.hbY1,this.entity.width,this.entity.height,t.entity.x,t.entity.y,t.entity.width,t.entity.height)&&(a=!1),rectColiding(this.hbX1,n,this.entity.width,this.entity.height,t.entity.x,t.entity.y,t.entity.width,t.entity.height)&&(h=!1));r=!h,a&&(this.entity.x=s),h&&(this.entity.y=n),500<this.entity.y&&(this.entity.y=this.startY,this.entity.x=this.startX)},this.tick=function(){0<this.hPower?(this.hPower-=.3,this.hPower<0&&(this.hPower=0)):this.hPower<0&&(this.hPower+=.3,0<this.hPower&&(this.hPower=0)),mainGame.keys&&!this.jumping&&(mainGame.keys[UP]||mainGame.keys[W]||mainGame.keys[SPACE])&&0==l&&1==r&&(l=19),mainGame.keys&&(mainGame.keys[DOWN]||mainGame.keys[S]),mainGame.keys&&(mainGame.keys[LEFT]||mainGame.keys[A])&&this.hPower>-this.maxSpeed&&this.hPower--,mainGame.keys&&(mainGame.keys[RIGHT]||mainGame.keys[D])&&this.hPower<this.maxSpeed&&this.hPower++,0<controllers.length&&((controllers[0].axes[0]<-.8||controllers[0].axes[2]<-.8||controllers[0].buttons[14].pressed)&&this.hPower--,(.8<controllers[0].axes[0]||.8<controllers[0].axes[2]||controllers[0].buttons[15].pressed)&&this.hPower++,(controllers[0].axes[1]<-.8||controllers[0].axes[3]<-.8||controllers[0].buttons[12].pressed)&&0==l&&1==r&&(l=19),.8<controllers[0].axes[1]||.8<controllers[0].axes[3]||controllers[0].buttons[13].pressed)}}var LEFT=37,RIGHT=39,UP=38,DOWN=40,W=87,A=65,S=83,D=68,LMB=0,RMB=2,SPACE=32;function level(t,e,s){this.tiles=[],this.backTiles=[],this.coins=[],this.levelSize=6,this.tileSize=32,this.startX=0;var a,o=this.startY=0,l=0;this.canvasHalfW=t/2,this.canvasHalfH=e/2,this.draw=function(t,e){for(i=0;i<this.backTiles.length;i++)tile=this.backTiles[i],xCheck=tile.entity.x>t.entity.x-this.canvasHalfW&&tile.entity.x<t.entity.x+this.canvasHalfW+this.tileSize,yCheck=!1,xCheck&&(yCheck=tile.entity.y>t.entity.y-this.canvasHalfH-offset&&tile.entity.y<t.entity.y+this.canvasHalfH+this.tileSize-offset),xCheck&&yCheck&&tile.update(e);for(i=0;i<this.tiles.length;i++)tile=this.tiles[i],tile.update(e);for(i=0;i<this.coins.length;i++)tile=this.coins[i],tile.update(e),heroColliding(tile)&&(tile.collected=!0,o++,this.coins.splice(i,1),o==l?(t.currentLevel++,console.log("Change Level: "+t.currentLevel),this.reset(t.currentLevel,t),o=0):console.log("coin(s):"+o+" / "+l))},this.reset=function(t,e){console.log("Reset Level: "+t),o=l=0,this.tiles=[],this.backTiles=[],this.coins=[],1==t?a=[[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,1,1,1,1,1,0,0,0,0,0,2,0,0,0,0,0],[1,0,0,0,0,0,0,0,1,1,1,0,0,1,1,1,0,0,0,1],[1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,2,0,0,0,1],[1,0,0,1,1,1,0,0,1,0,3,0,1,1,1,0,0,0,0,1],[1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1],[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]]:2==t?a=[[0,0,3,0,0,0],[0,0,0,2,0,0],[0,0,0,0,0,0],[0,0,0,0,0,0],[1,1,1,1,1,1]]:3==t?a=[[1,0,3,0,0,1],[1,0,0,2,0,1],[1,0,1,1,0,1],[1,2,0,0,2,1],[1,1,1,1,1,1]]:4==t&&(a=[[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0],[1,0,0,0,0,0,0,0,1,1,1,0,0,1,1,1,0,0,0,1],[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,1],[1,0,0,1,1,1,1,1,1,0,3,0,1,1,1,0,0,0,0,1],[1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1],[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]],e.currentLevel=0);var i=a.length,s=a[0].length;for(row=0;row<i;row++)for(col=0;col<s;col++){var n;xx=col*this.tileSize,yy=row*this.tileSize;var h=a[row][col];1==h?(n=new tileObj(this.tileSize,xx,yy,"brick",!0,col,row,"red"),this.tiles.push(n)):2==h?(n=new tileObj(this.tileSize,xx,yy,"coin",!1,col,row,"gold"),this.coins.push(n),l++):3==h&&(this.startX=xx,this.startY=yy,console.log(xx+" : "+yy)),n=new tileObj(this.tileSize,xx,yy,"back",!1,col,row,"#e6e6e6"),this.backTiles.push(n)}null!=e&&(e.startX=this.startX,e.startY=this.startY,e.entity.x=e.startX,e.entity.y=e.startY,e.hPower=0,e.jumping=!1)}}var level,hero,camera,debug=!1,offset=70,controllers=[],buttonsPressed=[],canvasW=800,canvasH=600;function startGame(){camera=new Camera(0,0),(level=new level(canvasW,canvasH,1)).reset(1),hero=new heroObj(25,25,"green",level.startX,level.startY),camera.newPos(hero,level),mainGame.start()}var mainGame={canvas:document.createElement("canvas"),start:function(){this.canvas.width=canvasW,this.canvas.height=canvasH,this.context=this.canvas.getContext("2d"),document.body.insertBefore(this.canvas,document.body.childNodes[0]),this.frameNo=0,this.interval=setInterval(updateGameArea,20),window.addEventListener("keydown",function(t){t.preventDefault(),mainGame.keys=mainGame.keys||[],mainGame.keys[t.keyCode]="keydown"==t.type}),window.addEventListener("keyup",function(t){mainGame.keys[t.keyCode]="keydown"==t.type}),window.addEventListener("mousedown",function(t){t.preventDefault(),mainGame.keys=mainGame.keys||[],mainGame.keys[t.button]=!0}),window.addEventListener("mouseup",function(t){t.preventDefault(),mainGame.keys=mainGame.keys||[],mainGame.keys[t.button]=!1}),this.canvas.oncontextmenu=function(t){t.preventDefault()},window.addEventListener("gamepadconnected",function(t){var e=navigator.getGamepads()[t.gamepad.index];console.log("Gamepad connected at index %d: %s. %d buttons, %d axes.",e.index,e.id,e.buttons.length,e.axes.length),controllers[t.gamepad.index]=t.gamepad})},stop:function(){clearInterval(this.interval)},clear:function(){this.context.clearRect(0,0,this.canvas.width,this.canvas.height)}};function updateGameArea(){hero.reset&&(hero.reset=!1,level.reset(hero.currentLevel)),navigator.getGamepads?navigator.getGamepads():navigator.webkitGetGamepads&&navigator.webkitGetGamepads,mainGame.clear(),level.draw(hero,camera),hero.tick(camera),hero.newPos(level.tiles),hero.update(camera),camera.newPos(hero,level)}var wall="assets/wall.png",brick="assets/brick.png";function mouseObj(){}function tileObj(t,e,i,s,n,h,a,o){this.entity=new entityObj(t,t,"null",e,i,"tile"),this.isSolid=n,this.column=h,this.row=a,this.color=o,this.image=new Image,this.collected=!1,this.type=s,"brick"==this.type?this.image.src=brick:this.image.src=wall,this.update=function(t){ctx=mainGame.context,ctx.save(),ctx.translate(this.entity.x-t.entity.x,this.entity.y-t.entity.y),ctx.rotate(this.angle),"brick"==this.type?ctx.drawImage(this.image,this.entity.width/-2,this.entity.height/-2,this.entity.width,this.entity.height):"coin"==this.type?0==this.collected&&(ctx.fillStyle=this.color,ctx.fillRect(this.entity.width/-2,this.entity.height/-2,this.entity.width,this.entity.height)):(ctx.fillStyle=this.color,ctx.fillRect(this.entity.width/-2,this.entity.height/-2,this.entity.width,this.entity.height)),debug&&heroColliding(this)&&(ctx.fillStyle="orange",ctx.fillRect(this.entity.width/-2,this.entity.height/-2,this.entity.width,this.entity.height)),ctx.restore()}}function heroColliding(t){return hero.hbX<t.entity.x+t.entity.width&&hero.hbX>t.entity.x&&hero.hbY<t.entity.y+t.entity.height&&hero.hbY>t.entity.y}function rectColiding(t,e,i,s,n,h,a,o){return t<n+a&&n<t+i&&e<h+o&&h<e+s}